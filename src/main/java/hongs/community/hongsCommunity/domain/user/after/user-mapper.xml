<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hongs.community.hongsCommunity.domain.user.after.HongUserMapper">

    <select id="userInfo" parameterType="Long" resultType="HongUserInfoVo">
        /* userInfo */
        select user_Uid
              ,user_id
              ,user_name
              ,user_email
              ,role
              ,case when role = 'ROLE_SUPER' then '슈퍼 권한'
                    when role = 'ROLE_ADMIN' then '어드민 권한'
                    else '유저 권한'
                end as role_name
          from hong_user
         where user_uid = #{userUid}
    </select>

    <select id="chkUserEmail" parameterType="HongUserCheckEmailVo" resultType="int">
        /* chkUserEmail */
        select count(*)
          from hong_user
         where user_email = #{userEmail}
           and user_uid != #{userUid}
    </select>
    
    <update id="updateUser" parameterType="HongUserUpdteDto">
        /* updateUser */
        update hong_user
           set user_name = #{userName}
        <if test="password != null">
              ,password = #{password}
              ,pwd_last_update = now()
        </if>
        <if test="userEmail != null">
              ,user_email = #{userEmail}
        </if>
         where user_uid = #{userUid}
    </update>

    <select id="list" resultType="HongUserListVo">
        select user_uid
              ,user_id
              ,user_name
              ,user_email
              ,case when role = 'ROLE_SUPER' then '슈퍼 권한'
                    when role = 'ROLE_ADMIN' then '어드민 권한'
                    else '유저 권한'
                end as role_name
              ,is_enable
              ,to_char(pwd_last_update, 'YYYY-MM-DD') as pwd_last_update
              ,to_char(last_login_date, 'YYYY-MM-DD') as last_login_date
              ,is_non_locked
              ,social_user_uid
              ,case when abs(datediff(last_login_date, now())) > 365 then true
                    else false
                end as is_user_expired
              ,case when now() > pwd_last_update then true
                    else false
                end as is_credential_expired
          from hong_user
    </select>

    <update id="unlock" parameterType="HongUserUnlockDto">
        /* unlock */
        update hong_user
           set is_non_locked = true
              ,pwd_fail_cnt = 0
         where user_uid = #{userUid}
    </update>

    <update id="toEnable" parameterType="Long">
        /* toEnable */
        update hong_user
           set is_enable = true
         where user_uid = #{userUid}
    </update>

    <update id="toDisable" parameterType="Long">
        /* toDisable */
        update hong_user
           set is_enable = false
         where user_uid = #{userUid}
    </update>

    <select id="getUserEmailByUid" parameterType="Long" resultType="String">
        /* getUserEmailByUid */
        select user_email
          from hong_user
         where user_uid = #{userUid}
    </select>
</mapper>