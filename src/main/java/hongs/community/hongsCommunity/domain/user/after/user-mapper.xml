<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hongs.community.hongsCommunity.domain.user.after.HongUserMapper">

    <select id="userInfo" parameterType="Long" resultType="HongUserInfoVo">
        /* userInfo */
        select huser.user_Uid
              ,huser.user_id
              ,huser.user_name
              ,huser.user_email
              ,huser.role
              ,hcode.code_name as role_name
          from hong_user huser
          left join hong_code hcode on hcode.code_val = huser.role and hcode.upper_code_val = 'USER_ROLE'
         where user_uid = #{userUid}
    </select>

    <select id="chkUserEmail" parameterType="HongUserCheckEmailVo" resultType="int">
        /* chkUserEmail */
        select count(*)
          from hong_user
         where user_email = #{userEmail}
           and user_uid != #{userUid}
    </select>
    
    <update id="updateUser" parameterType="HongUserUpdteDto">
        /* updateUser */
        update hong_user
           set user_name = #{userName}
        <if test="password != null">
              ,password = #{password}
              ,pwd_last_update = now()
        </if>
        <if test="userEmail != null">
              ,user_email = #{userEmail}
        </if>
         where user_uid = #{userUid}
    </update>

    <select id="list" resultType="HongUserListVo">
        select huser.user_uid
              ,huser.user_id
              ,huser.user_name
              ,huser.user_email
              ,hcode.code_name as role_name
              ,huser.is_enable
              ,to_char(huser.pwd_last_update, 'YYYY-MM-DD') as pwd_last_update
              ,to_char(huser.last_login_date, 'YYYY-MM-DD') as last_login_date
              ,huser.is_non_locked
              ,huser.social_user_uid
              ,case when abs(datediff(huser.last_login_date, now())) > 365 then true
               else false
                end as is_user_expired
              ,case when now() > huser.pwd_last_update then true
               else false
                end as is_credential_expired
          from hong_user huser
          left join hong_code hcode on hcode.code_val = huser.role and hcode.upper_code_val = 'USER_ROLE'
    </select>

    <update id="unlock" parameterType="HongUserUnlockDto">
        /* unlock */
        update hong_user
           set is_non_locked = true
              ,pwd_fail_cnt = 0
         where user_uid = #{userUid}
    </update>

    <update id="toEnable" parameterType="Long">
        /* toEnable */
        update hong_user
           set is_enable = true
         where user_uid = #{userUid}
    </update>

    <update id="toDisable" parameterType="Long">
        /* toDisable */
        update hong_user
           set is_enable = false
         where user_uid = #{userUid}
    </update>

    <select id="getUserEmailByUid" parameterType="Long" resultType="String">
        /* getUserEmailByUid */
        select user_email
          from hong_user
         where user_uid = #{userUid}
    </select>
</mapper>