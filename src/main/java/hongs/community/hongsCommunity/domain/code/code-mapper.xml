<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hongs.community.hongsCommunity.domain.code.HongCodeMapper">

    <select id="upperList" resultType="HongUpperCodeListVo">
        /* code.upperList */
        select parent.hong_code_uid as hong_code_uid
              ,parent.code_val as code_val
              ,parent.code_name as code_name
              ,( select count(*)
                   from hong_code as children
                  where parent.code_val = children.upper_code_val
                    and children.delete_yn = 'N'
               ) as child_code_cnt
              ,parent.use_yn as use_yn
              ,huser.user_nm as reg_name
              ,to_char(parent.reg_dt, 'YYYY-MM-DD') as reg_dt
          from hong_code as parent
          left join hong_user as huser on huser.user_uid = parent.reg_id
         where parent.upper_code_val is null
           and parent.delete_yn = 'N'
    </select>

    <select id="checkIfDuplicate" resultType="int" parameterType="String">
        /* code.checkIfDuplicate */
        select count(*)
          from hong_code
         where delete_yn = 'N'
           and code_val = #{codeVal}
    </select>

    <insert id="insert" parameterType="HongCodeInsertDto">
        /* code.insert */
        insert into hong_code (
            code_val
           ,code_name
         <if test="memoCn != null">
           ,memo_cn
         </if>
           ,use_yn
           ,delete_yn
           ,reg_id
           ,reg_dt
           ,mdfr_id
           ,mdfr_dt
        ) values (
            #{codeVal}
           ,#{codeName}
         <if test="memoCn != null">
           ,#{memoCn}
         </if>
           ,#{useYn}
           ,'N'
           ,#{regId}
           ,now()
           ,#{mdfrId}
           ,now()
        )
    </insert>

    <select id="upperView" parameterType="Long" resultType="HongCodeViewVo">
        /* code.upperView */
        select parent.hong_code_uid
              ,parent.upper_code_val
              ,parent.code_val
              ,parent.code_name
              ,parent.memo_cn
              ,parent.use_yn
              ,( select count(*)
                 from hong_code as children
                 where parent.code_val = children.upper_code_val
                   and children.delete_yn = 'N'
                ) as child_code_cnt
          from hong_code as parent
         where parent.hong_code_uid = #{hongCodeUid}
    </select>

    <delete id="delete" parameterType="HongCodeDeleteDto">
        /* code.delete */
        update hong_code
           set delete_yn = 'Y'
              ,mdfr_id = #{mdfrId}
              ,mdfr_dt = now()
         where hong_code_uid = #{hongCodeUid}
    </delete>

    <update id="update" parameterType="HongCodeUpdateDto">
        /* update */
        update hong_code
           set code_name = #{codeName}
              ,use_yn = #{useYn}
            <if test="memoCn != null">
              ,memo_cn = #{memoCn}
            </if>
              ,mdfr_id = #{mdfrId}
              ,mdfr_dt = now()
         where hong_code_uid = #{hongCodeUid}
    </update>

    <insert id="insertEach" parameterType="HongCodeChildMergeDto">
        /* code.insertEach */
        <foreach collection="insertChild" separator=";" item="item" index="index">
            insert into hong_code (
                upper_code_val, code_val, code_name, use_yn,memo_cn
                ,reg_id, reg_dt, mdfr_id, mdfr_dt, delete_yn
            ) values (
                #{upperCodeVal}, #{item.codeVal}, #{item.codeName}, #{item.useYn},#{item.memoCn}
                ,#{regId}, now(), #{mdfrId}, now(), 'N'
            )
        </foreach>
    </insert>

    <update id="updateEach" parameterType="HongCodeChildMergeDto">
        /* code.updateEach */
        <foreach collection="updateChild" separator=";" item="item" index="index">
            update hong_code
               set code_val = #{item.codeVal}
                  ,code_name = #{item.codeName}
                  ,use_yn = #{item.useYn}
                  ,memo_cn = #{item.memoCn}
                  ,mdfr_id = #{mdfrId}
                  ,mdfr_dt = now()
             where hong_code_uid = #{item.hongCodeUid}
               and upper_code_val = #{upperCodeVal}
        </foreach>
    </update>

    <update id="deleteEach" parameterType="HongCodeChildMergeDto">
        /* code.deleteEach */
        <foreach collection="delUids" separator=";" item="item" index="index">
            update hong_code
               set delete_yn = 'Y'
                  ,mdfr_id = #{mdfrId}
                  ,mdfr_dt = now()
             where hong_code_uid = #{item}
               and upper_code_val = #{upperCodeVal}
        </foreach>
    </update>

    <select id="childList" parameterType="Long" resultType="HongChildCodeListVo">
        /* code.childList */
        select child.hong_code_uid
              ,child.code_val
              ,child.code_name
              ,child.memo_cn
              ,child.use_yn
          from hong_code child
         inner join hong_code parent on parent.code_val = child.upper_code_val and parent.hong_code_uid = #{hongCodeUid}
         where child.delete_yn = 'N'
    </select>

    <select id="childListByVal" parameterType="String" resultType="HongChildCodeListVo">
        /* code.childListByVal */
        select child.hong_code_uid
              ,child.code_val
              ,child.code_name
              ,child.memo_cn
              ,child.use_yn
          from hong_code child
         where child.delete_yn = 'N'
           and child.upper_code_val = #{upperCodeVal}
    </select>
</mapper>