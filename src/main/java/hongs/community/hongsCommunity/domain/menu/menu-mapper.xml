<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hongs.community.hongsCommunity.domain.menu.HongMenuMapper">

    <select id="parentList" parameterType="HongMenuDto" resultType="HongMenuVo">
        /* parentList */
        SELECT menu_Uid
              ,upper_menu_uid
              ,menu_url
              ,menu_text
              ,menu_role
              ,use_yn
              ,delete_yn
              ,sort_no
         FROM hong_menu
        WHERE upper_menu_uid IS NULL
          and menu_role = #{menuRole}
          and delete_yn = #{deleteYn}
          and use_yn = #{useYn}
        order by sort_no
    </select>

    <select id="childList" parameterType="HongMenuDto" resultType="HongMenuVo">
        /* childList */
        SELECT menu_Uid
             ,upper_menu_uid
             ,menu_url
             ,menu_text
             ,menu_role
             ,use_yn
             ,delete_yn
             ,sort_no
        FROM hong_menu
        WHERE upper_menu_uid IS NOT NULL
          and upper_menu_uid = #{upperMenuUid}
          and delete_yn = #{deleteYn}
          and use_yn = #{useYn}
        order by sort_no
    </select>

    <select id="superList" parameterType="HongMenuSuperDto" resultType="HongMenuSuperVo">
        /* superList */
        WITH RECURSIVE menu_hierarchy AS (
            SELECT menu_uid
                  ,upper_menu_uid
                  ,menu_url
                  ,menu_text
                  ,menu_role
                  ,use_yn
                  ,delete_yn
                  ,landing_page_yn
                  ,sort_no
                  ,json_array(menu_text) as path_nm
                  ,json_array(menu_uid) as path
                  ,0 AS level
              FROM hong_menu
             WHERE upper_menu_uid IS NULL
             <if test="useYn != null">
               and use_yn = #{useYn}
             </if>
               and menu_role = #{menuRole}
               and delete_yn = 'N'
             UNION ALL
            SELECT m.menu_uid
                  ,m.upper_menu_uid
                  ,m.menu_url
                  ,m.menu_text
                  ,m.menu_role
                  ,m.use_yn
                  ,m.delete_yn
                  ,m.landing_page_yn
                  ,m.sort_no
                  ,json_array_append(mh.path_nm, '$', m.menu_text) as path_nm
                  ,json_array_append(mh.PATH, '$', m.sort_no) as path
                  ,mh.level + 1 AS level
              FROM hong_menu AS m
             INNER JOIN menu_hierarchy mh ON m.upper_menu_uid = mh.menu_Uid
             where m.delete_yn = 'N'
              <if test="useYn != null">
               and m.use_yn = #{useYn}
              </if>
               and m.menu_role = #{menuRole}
               and m.upper_menu_uid is not null
        )
        SELECT  mh.menu_uid
               ,mh.upper_menu_uid
               ,mh.menu_text
               ,mh.menu_url
               ,mh.menu_role
               ,mh.use_yn
               ,mh.delete_yn
               ,mh.landing_page_yn
               ,mh.sort_no
               ,mh.path
               ,mh.level
               ,CONCAT_WS(' > ', JSON_UNQUOTE(JSON_EXTRACT(mh.path_nm, '$[0]')), JSON_UNQUOTE(JSON_EXTRACT(mh.path_nm, '$[1]'))) AS menu_path
          FROM menu_hierarchy AS mh
         ORDER BY JSON_UNQUOTE(JSON_EXTRACT(mh.path, '$[0]')) ASC, JSON_UNQUOTE(JSON_EXTRACT(mh.path, '$[1]')) ASC, JSON_UNQUOTE(JSON_EXTRACT(mh.path, '$[2]')) ASC
    </select>

    <insert id="join" parameterType="HongMenuInsertUpdateDto">
        /* HongMenuInsertUpdateDto.join */
        insert into hong_menu (
            menu_text
        <if test="menuUrl != null">
            ,menu_url
        </if>
           ,use_yn
           ,landing_page_yn
           ,delete_yn
           ,sort_no
           ,menu_role
        <if test="upperMenuUid != null">
           ,upper_menu_uid
        </if>
           ,reg_id
           ,mdfr_id
           ,reg_dt
           ,mdfr_dt
        ) values (
            #{menuText}
        <if test="menuUrl != null">
            ,#{menuUrl}
        </if>
           ,#{useYn}
           ,#{landingPageYn}
           ,'N'
           ,#{sortNo}
           ,#{menuRole}
        <if test="upperMenuUid != null">
           ,#{upperMenuUid}
        </if>
           ,#{regId}
           ,#{mdfrId}
           ,now()
           ,now()
        )
    </insert>

    <update id="update" parameterType="HongMenuInsertUpdateDto">
        /* HongMenuInsertUpdateDto.update */
        update hong_menu
           set menu_text = #{menuText}
             <if test="menuUrl != null">
              ,menu_url = #{menuUrl}
             </if>
              ,use_yn = #{useYn}
              ,landing_page_yn = #{landingPageYn}
              ,sort_no = #{sortNo}
              ,menu_role = #{menuRole}
            <if test="upperMenuUid != null">
              ,upper_menu_uid = #{upperMenuUid}
            </if>
              ,mdfr_id = #{mdfrId}
              ,mdfr_dt = now()
         where menu_uid = #{menuUid}
    </update>

    <delete id="delete" parameterType="Long">
        update hong_menu
           set delete_yn = 'Y'
         where menu_uid = #{menuUid}
    </delete>

    <select id="getLandingPage" resultType="String" parameterType="String">
        /* getLandingPage */
        select menu_url
          from hong_menu
         where menu_role = #{menuRole}
           and delete_yn = 'N'
           and use_yn = 'Y'
           and landing_page_yn = 'Y'
         order by sort_no desc
         limit 1
    </select>
</mapper>